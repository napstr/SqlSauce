import com.github.spotbugs.SpotBugsTask
import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0-M1'
    }
}
plugins {
    id 'com.github.spotbugs' version '1.6.0'
}
apply plugin: 'org.junit.platform.gradle.plugin'

allprojects {
    repositories {
        jcenter()                               // JDA, maybe others
        mavenCentral()                          // everything else
        mavenLocal()                            // local maven repo, mostly for testing stuff
        maven { url 'https://jitpack.io' }      // for getting builds from github
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.spotbugs'

    sourceCompatibility = 8
    targetCompatibility = 8

    group 'space.npstr.SqlSauce'
    version '0.0.5-SNAPSHOT'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId rootProject.group
                artifactId moduleName

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }

    compileJava.dependsOn 'clean'
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

    jar.dependsOn 'spotbugsMain'
    publishToMavenLocal.dependsOn 'jar'
    task install {
        dependsOn publishToMavenLocal, test
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    ext {
        gradleVers = '4.4.1'

        postgresDriverVersion = '42.2.0'
        hibernateVersion = '5.3.0.Beta1'
        hikariVersion = '2.7.6'
        jschVersion = '0.1.54'
        hibTypesVersion = '1.2.0'

        dsProxyVersion = '1.4.5'
        flywayVersion = '5.0.6'

        jaxbApiVersion = '2.3.0'
        slf4jApiVersion = '1.8.0-beta0'
        spotbugsVersion = '3.1.1'
        prometheusVersion = '0.1.0'

        //discord entities module
        jdaVersion = '3.5.0_329'

        //testing
        jUnitVersion = '5.0.2'
        apiGuardianVersion = '1.0.0'
        logbackVersion = '1.3.0-alpha0'
    }

    // To generate an HTML report instead of XML
    tasks.withType(SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

subprojects {
    dependencies {
        compileOnly rootProject
    }
}

ext {
    moduleName = 'sqlsauce-core'
}

dependencies {
    //database & connection stuff
    compile group: 'org.postgresql', name: 'postgresql', version: postgresDriverVersion //postgres jdbc driver
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion   //hibernate + JPA
    compile group: 'com.zaxxer', name: 'HikariCP', version: hikariVersion               //connection pool
    compile group: 'com.jcraft', name: 'jsch', version: jschVersion                     //ssh tunnel
    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: hibTypesVersion // moar hibernate types

    //optional db related deps
    compileOnly group: 'net.ttddyy', name: 'datasource-proxy', version: dsProxyVersion  //log proxy for queries
    compileOnly group: 'org.flywaydb', name: 'flyway-core', version: flywayVersion      //3rd party migration provider

    //optional various/QA deps
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: slf4jApiVersion   //logging framework
    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: spotbugsVersion //annotations
    compileOnly group: 'io.prometheus', name: 'simpleclient_hibernate', version: prometheusVersion   //db metrics

    //testing
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: jUnitVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jUnitVersion
    // To avoid compiler warnings about @API annotations in JUnit code.
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: apiGuardianVersion

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
}

configurations {
    // Make the compileOnly dependencies available when compiling/running tests
    testCompile.extendsFrom compileOnly
}


task wrapper(type: Wrapper) {
    gradleVersion = gradleVers
    distributionType = DistributionType.ALL
}
